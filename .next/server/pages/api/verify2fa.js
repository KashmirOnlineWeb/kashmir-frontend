"use strict";(()=>{var e={};e.id=4164,e.ids=[4164],e.modules={145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},9200:e=>{e.exports=require("speakeasy")},6249:(e,t)=>{Object.defineProperty(t,"l",{enumerable:!0,get:function(){return function e(t,n){return n in t?t[n]:"then"in t&&"function"==typeof t.then?t.then(t=>e(t,n)):"function"==typeof t&&"default"===n?t:void 0}}})},6826:(e,t,n)=>{n.r(t),n.d(t,{config:()=>d,default:()=>l,routeModule:()=>f});var r={};n.r(r),n.d(r,{default:()=>u});var o=n(1802),i=n(7153),s=n(6249),a=n(9200);function u(e,t){if(console.log({req:e}),"POST"!==e.method){t.status(405).send({message:"Only POST requests allowed"});return}let{secret:n,token:r}=e.body;console.log(r," token inside api verify"),console.log(n," secret inside api verify");try{let e=a.totp.verify({secret:n,encoding:"base32",token:r});console.log({verified:e}),t.status(200).json({verified:e})}catch(e){t.status(500).json({error:"Error verifying token"})}}let l=(0,s.l)(r,"default"),d=(0,s.l)(r,"config"),f=new o.PagesAPIRouteModule({definition:{kind:i.x.PAGES_API,page:"/api/verify2fa",pathname:"/api/verify2fa",bundlePath:"",filename:""},userland:r})},7153:(e,t)=>{var n;Object.defineProperty(t,"x",{enumerable:!0,get:function(){return n}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(n||(n={}))},1802:(e,t,n)=>{e.exports=n(145)}};var t=require("../../webpack-api-runtime.js");t.C(e);var n=t(t.s=6826);module.exports=n})();